import React, { useEffect, useState } from 'react';
import './Greeting.css'; // Import t·ªáp CSS m·ªõi
import { useNavigate } from 'react-router-dom'; // D√πng ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng t·ªõi trang ti·∫øp theo

const Greeting = () => {
  const [time, setTime] = useState(new Date());
  const [inputDate, setInputDate] = useState(''); // L∆∞u tr·ªØ gi√° tr·ªã ng√†y ng∆∞·ªùi d√πng nh·∫≠p
  const [errorMessage, setErrorMessage] = useState(''); // L∆∞u tr·ªØ th√¥ng b√°o l·ªói
  const [countdown, setCountdown] = useState(null); // L∆∞u tr·ªØ tr·∫°ng th√°i countdown
  const navigate = useNavigate(); // ƒê·ªÉ ƒëi·ªÅu h∆∞·ªõng

  // C·∫≠p nh·∫≠t th·ªùi gian m·ªói gi√¢y
  useEffect(() => {
    const timer = setInterval(() => {
      setTime(new Date());
    }, 1000);

    // H·ªßy timer khi component b·ªã unmount
    return () => clearInterval(timer);
  }, []);

  // ƒê·ªãnh d·∫°ng ng√†y v√† gi·ªù
  const formatTime = (date) => {
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    return `${hours}:${minutes}:${seconds}`;
  };

  const formatDate = (date) => {
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    return `${day}/${month}/${year}`;
  };

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫•n submit
  const handleSubmit = (e) => {
    e.preventDefault(); // NgƒÉn kh√¥ng cho trang reload
    if (inputDate === '10/10/2003') {
      // N·∫øu nh·∫≠p ƒë√∫ng ng√†y sinh
      setErrorMessage(''); // X√≥a th√¥ng b√°o l·ªói n·∫øu c√≥
      startCountdown(); // B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c
    } else {
      // N·∫øu nh·∫≠p sai ng√†y sinh
      setErrorMessage('B·∫°n kh√¥ng ph·∫£i l√† √Ånh!');
    }
  };

  // B·∫Øt ƒë·∫ßu countdown t·ª´ 5
  const startCountdown = () => {
    setCountdown(5); // B·∫Øt ƒë·∫ßu t·ª´ 5 gi√¢y
    let countdownValue = 5;
    const countdownTimer = setInterval(() => {
      countdownValue -= 1;
      setCountdown(countdownValue);
      if (countdownValue === 0) {
        clearInterval(countdownTimer); // D·ª´ng countdown
        navigate('/happy-birthday'); // Chuy·ªÉn ƒë·∫øn trang HappyBirthDay.js
      }
    }, 1000);
  };

  return (
    <div className="greeting-container">
      <div className="clock-container">
        <div className="clock">
          <h2 className="time-text">{formatTime(time)}</h2>
          <p className="date-text">{formatDate(time)}</p>
        </div>
      </div>

      {/* √î input ƒë·ªÉ nh·∫≠p ng√†y sinh */}
      <form className="birthday-form" onSubmit={handleSubmit}>
        <label htmlFor="birthday-input" className="input-label">Nh·∫≠p ng√†y sinh c·ªßa b·∫°n (DD/MM/YYYY):</label>
        <input
          id="birthday-input"
          type="text"
          value={inputDate}
          onChange={(e) => setInputDate(e.target.value)}
          className="birthday-input"
          placeholder="DD/MM/YYYY"
        />
        <button type="submit" className="submit-button">X√°c nh·∫≠n</button>
      </form>

      {/* Hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥ */}
      {errorMessage && <div className="error-message">{errorMessage}</div>}

      {/* Hi·ªÉn th·ªã countdown n·∫øu ng∆∞·ªùi d√πng nh·∫≠p ƒë√∫ng ng√†y */}
      {countdown !== null && (
        <div className="countdown-box">
          <p className="countdown-text">21 nƒÉm tr∆∞·ªõc v√†o ng√†y n√†y th√°ng n√†y b·∫°n chu·∫©n b·ªã oe oe trong: {countdown}</p>
        </div>
      )}

      <p className="caption">√î mai g·ªçt! üéÇüéâ</p>
    </div>
  );
};

export default Greeting;
